data <- data[,c(1:12,80)]
## 2 - FEATURE: MSSUBCLASS, turn to factor
data$MSSubClass = factor(data$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
data$MSZoning = factor(data$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
## 4 - FEATURE: LotFrontage, for now replace missing values w/ mean
data$LotFrontage = ifelse(is.na(data$LotFrontage),
ave(data$LotFrontage, FUN = function(x) mean(x,na.rm=TRUE)),
data$LotFrontage)
## 5 - FEATURE: LotArea, for now replace missing values w/ mean if any
data$LotArea = ifelse(is.na(data$LotArea),
ave(data$LotArea, FUN = function(x) mean(x,na.rm=TRUE)),
data$LotArea)
## 6 - FEATURE: STREET, turn to factor
data$Street = factor(data$Street,
levels = c(  'Grvl'
,'Pave'
),
labels = c("Gravel","Paved"))
sapply(data,function(x) sum(is.na(x)))
reg.data$Alley = factor(reg.data$Alley,
levels = c(   'Grvl'
,'Pave'
,'Not Applicable'
),
labels = c("Gravel","Paved","Not Applicable"))
data$Alley = factor(reg.data$Alley,
levels = c(   'Grvl'
,'Pave'
,'Not Applicable'
),
labels = c("Gravel","Paved","Not Applicable"))
data$Alley = factor(data$Alley,
levels = c(   'Grvl'
,'Pave'
,'Not Applicable'
),
labels = c("Gravel","Paved","Not Applicable"))
data$Alley[is.na(data$Alley)] <- "Not Applicable"
## 8 - FEATURE: LotShape, turn to factor
data$LotShape = factor(data$LotShape,
levels = c(    'Reg'
,'IR1'
,'IR2'
,'IR3'
),
labels = c( "Regular"
,"Slightly Irregular"
,"Moderately Irregular"
,"Irregular"))
sapply(data,function(x) sum(is.na(x)))
## 9 - FEATURE: LandContour, turn to factor
reg.data$LandContour = factor(reg.data$LandContour,
levels = c(    'Lvl'
,'Bnk'
,'HLS'
,'Low'
),
labels = c( "Near Flat/Level"
,"Banked"
,"Hillside"
,"Low"))
## 9 - FEATURE: LandContour, turn to factor
data$LandContour = factor(data$LandContour,
levels = c(    'Lvl'
,'Bnk'
,'HLS'
,'Low'
),
labels = c( "Near Flat/Level"
,"Banked"
,"Hillside"
,"Low"))
sapply(data,function(x) sum(is.na(x)))
## 10 - FEATURE: Utilities, turn to factor
reg.data$Utilities = factor(reg.data$Utilities,
levels = c('AllPub',
'NoSewr',
'NoSeWa',
'ELO'
),
labels = c( "All Public Utilities"
,"Electricity, Gas, and Water"
,"Electricity and Gas Only"
,"Electricity Only"))
## 10 - FEATURE: Utilities, turn to factor
data$Utilities = factor(data$Utilities,
levels = c('AllPub',
'NoSewr',
'NoSeWa',
'ELO'
),
labels = c( "All Public Utilities"
,"Electricity, Gas, and Water"
,"Electricity and Gas Only"
,"Electricity Only"))
sapply(data,function(x) sum(is.na(x)))
## 11 - FEATURE: LotConfig, turn to factor
data$LotConfig = factor(data$LotConfig,
levels = c('Inside',
'Corner',
'CulDSac',
'FR2',
'FR3'
),
labels = c( "Inside Lot"
,"Corner Log"
,"Cul-de-sac"
,"Frontage on 2 sides of property"
,"Frontage on 3 sides of property"))
sapply(data,function(x) sum(is.na(x)))
## 12 - FEATURE: Neighborhood, turn to factor
data$Neighborhood = factor(data$Neighborhood,
levels = c('Blmngtn',
'Blueste',
'BrDale',
'BrkSide',
'ClearCr',
'CollgCr',
'Crawfor',
'Edwards',
'Gilbert',
'IDOTRR',
'MeadowV',
'Mitchel',
'Names',
'NoRidge',
'NPkVill',
'NridgHt',
'NWAmes',
'OldTown',
'SWISU',
'Sawyer',
'SawyerW',
'Somerst',
'StoneBr',
'Timber',
'Veenker',
'Other'
),
labels = c( "Bloomington Heights"
,"Bluestem"
,"Briardale"
,"Brookside"
,"Clear Creek"
,"College Creek"
,"Crawford"
,"Edwards"
,"Gilbert"
,"Iowa DOT and Rail Road"
,"Meadow Village"
,"Mitchell"
,"Nort Ames"
,"North Ames"
,"Northridge"
,"Northpark Villa"
,"Northridge Heights"
,"Northwest Ames"
,"Old Town"
,"South & West of Iowa State University"
,"Sawyer"
,"Sawyer West"
,"Somerset"
,"Stone Brook"
,"Timberland"
,"Veenker"
,"Other")
)
## 12 - FEATURE: Neighborhood, turn to factor
data$Neighborhood = factor(data$Neighborhood,
levels = c('Blmngtn',
'Blueste',
'BrDale',
'BrkSide',
'ClearCr',
'CollgCr',
'Crawfor',
'Edwards',
'Gilbert',
'IDOTRR',
'MeadowV',
'Mitchel',
'Names',
'NoRidge',
'NPkVill',
'NridgHt',
'NWAmes',
'OldTown',
'SWISU',
'Sawyer',
'SawyerW',
'Somerst',
'StoneBr',
'Timber',
'Veenker',
'Other'
),
labels = c( "Bloomington Heights"
,"Bluestem"
,"Briardale"
,"Brookside"
,"Clear Creek"
,"College Creek"
,"Crawford"
,"Edwards"
,"Gilbert"
,"Iowa DOT and Rail Road"
,"Meadow Village"
,"Mitchell"
,"North Ames"
,"Northridge"
,"Northpark Villa"
,"Northridge Heights"
,"Northwest Ames"
,"Old Town"
,"South & West of Iowa State University"
,"Sawyer"
,"Sawyer West"
,"Somerset"
,"Stone Brook"
,"Timberland"
,"Veenker"
,"Other")
)
sapply(data,function(x) sum(is.na(x)))
data$Neighborhood[is.na(data$Neighborhood)] <- "Other"
sapply(data,function(x) sum(is.na(x)))
return (data)
dataPreprocessing <- function(){
setwd('C:/Users/cusey/source/repos/DataScienceProjects/MDS 556 - House Prices Regression')
options(scipen = 999)
data <- read.csv(file='train.csv', header=TRUE)
## 1 - FEATURE: ID = REMOVE
data <- data[,2:81]
##TMP
data <- data[,c(1:12,80)]
## 2 - FEATURE: MSSUBCLASS, turn to factor
data$MSSubClass = factor(data$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
## 3 - FEATURE: MSZONING, turn to factor
## DATA ISSUE 1: THERE ARE 10 ROWS THAT USE C (all)
## WHICH ISN'T IN THE DATA DICTIONARY.
## For now lets assume that C (all) is Commercial
data$MSZoning = factor(data$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
## 4 - FEATURE: LotFrontage, for now replace missing values w/ mean
data$LotFrontage = ifelse(is.na(data$LotFrontage),
ave(data$LotFrontage, FUN = function(x) mean(x,na.rm=TRUE)),
data$LotFrontage)
## 5 - FEATURE: LotArea, for now replace missing values w/ mean if any
data$LotArea = ifelse(is.na(data$LotArea),
ave(data$LotArea, FUN = function(x) mean(x,na.rm=TRUE)),
data$LotArea)
## 6 - FEATURE: STREET, turn to factor
data$Street = factor(data$Street,
levels = c(  'Grvl'
,'Pave'
),
labels = c("Gravel","Paved"))
## 7 - FEATURE: Alley, turn to factor but later will
## need to do something b/c I think no alley access
## may need to be separate.
data$Alley = factor(data$Alley,
levels = c(   'Grvl'
,'Pave'
,'Not Applicable'
),
labels = c("Gravel","Paved","Not Applicable"))
data$Alley[is.na(data$Alley)] <- "Not Applicable"
## 8 - FEATURE: LotShape, turn to factor
data$LotShape = factor(data$LotShape,
levels = c(    'Reg'
,'IR1'
,'IR2'
,'IR3'
),
labels = c( "Regular"
,"Slightly Irregular"
,"Moderately Irregular"
,"Irregular"))
## 9 - FEATURE: LandContour, turn to factor
data$LandContour = factor(data$LandContour,
levels = c(    'Lvl'
,'Bnk'
,'HLS'
,'Low'
),
labels = c( "Near Flat/Level"
,"Banked"
,"Hillside"
,"Low"))
## 10 - FEATURE: Utilities, turn to factor
data$Utilities = factor(data$Utilities,
levels = c('AllPub',
'NoSewr',
'NoSeWa',
'ELO'
),
labels = c( "All Public Utilities"
,"Electricity, Gas, and Water"
,"Electricity and Gas Only"
,"Electricity Only"))
## 11 - FEATURE: LotConfig, turn to factor
data$LotConfig = factor(data$LotConfig,
levels = c('Inside',
'Corner',
'CulDSac',
'FR2',
'FR3'
),
labels = c( "Inside Lot"
,"Corner Log"
,"Cul-de-sac"
,"Frontage on 2 sides of property"
,"Frontage on 3 sides of property"))
## 12 - FEATURE: LandSlope, turn to factor
reg.data$LandSlope = factor(reg.data$LandSlope,
levels = c('Gtl',
'Mod',
'Sev'
),
labels = c(1,2,3))
## 12 - FEATURE: Neighborhood, turn to factor
data$Neighborhood = factor(data$Neighborhood,
levels = c('Blmngtn',
'Blueste',
'BrDale',
'BrkSide',
'ClearCr',
'CollgCr',
'Crawfor',
'Edwards',
'Gilbert',
'IDOTRR',
'MeadowV',
'Mitchel',
'Names',
'NoRidge',
'NPkVill',
'NridgHt',
'NWAmes',
'OldTown',
'SWISU',
'Sawyer',
'SawyerW',
'Somerst',
'StoneBr',
'Timber',
'Veenker',
'Other'
),
labels = c( "Bloomington Heights"
,"Bluestem"
,"Briardale"
,"Brookside"
,"Clear Creek"
,"College Creek"
,"Crawford"
,"Edwards"
,"Gilbert"
,"Iowa DOT and Rail Road"
,"Meadow Village"
,"Mitchell"
,"North Ames"
,"Northridge"
,"Northpark Villa"
,"Northridge Heights"
,"Northwest Ames"
,"Old Town"
,"South & West of Iowa State University"
,"Sawyer"
,"Sawyer West"
,"Somerset"
,"Stone Brook"
,"Timberland"
,"Veenker"
,"Other")
)
data$Neighborhood[is.na(data$Neighborhood)] <- "Other"
return (data)
}
rm(list = ls())
## load in user defined functions.
source("data preprocessing.R", local = TRUE)
reg.data <- dataPreprocessing()
## 12 - FEATURE: LandSlope, turn to factor
reg.data$LandSlope = factor(reg.data$LandSlope,
levels = c('Gtl',
'Mod',
'Sev'
),
labels = c( "Gentle Slope"
,"Moderate Slope"
,"Sever Slope")
)
rm(list = ls())
## load in user defined functions.
source("data preprocessing.R", local = TRUE)
reg.data <- dataPreprocessing()
rm(list = ls())
## load in user defined functions.
source("data preprocessing.R", local = TRUE)
data <- dataPreprocessing()
sapply(data,function(x) sum(is.na(x)))
## Correlation Coefficients #####################
##library(help = "stats")
plot(data$LotArea, data$SalePrice, col="red", xlab="Year Built", ylab="Sales Price", main="Pearson Correlation")
cor(x=data$LotArea, y = data$SalePrice, use="everything", method="pearson")
## NOTE: Keep in mind to look at other correlation measures such as spearman or kendall
pairs(data)
##Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_231') # for 32-bit
ig_values <-information.gain(SalePrice~.,data)
##install.packages("FSelector")
library(FSelector)
##Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_231') # for 32-bit
ig_values <-information.gain(SalePrice~.,data)
ig_values
top_k_features <- cutoff.k(ig_values,2)
f<- as.simple.formula(top_k_features,"SalePrice")
f
rfe_controller <- rfeControl(functions = lmFuncs, method="repeatedcv", repeats = 5, verbose = FALSE)
size <- c(1:10)
lm_Profiler <- rfe(data[,1:12], mtcars[,13], sizes=size,rfeControl = rfe_controller)
library(caret)
rfe_controller <- rfeControl(functions = lmFuncs, method="repeatedcv", repeats = 5, verbose = FALSE)
size <- c(1:10)
lm_Profiler <- rfe(data[,1:12], mtcars[,13], sizes=size,rfeControl = rfe_controller)
lm_Profiler <- rfe(data[,1:12], data[,13], sizes=size,rfeControl = rfe_controller)
lm_Profiler
View(data)
lm_Profiler <- rfe(data[1:12,], data[13,], sizes=size,rfeControl = rfe_controller)
lm_Profiler <- rfe(data[,1:12], data[,13], sizes=size,rfeControl = rfe_controller)
data[,1:12]
data[,13]
lm_Profiler <- rfe(data[,1:12], data[,13], sizes=size,rfeControl = rfe_controller)
lm_Profiler <- rfe(x=data[,1:12], y=data[,13], sizes=size,rfeControl = rfe_controller)
## Feature Extraction or Construction
range(data$LotArea)
scale(data$LotArea)
## Dimensionality Reduction
##PCA
## doesn't like my factors? Need to figure
## out how to scale them.
sale_price_features <- data[3:4]
sale_price_target <- data[13]
sale_price_pca <- prcomp(x=sale_price_features, scale. = T)
biplot(sale_price_pca,scale = TRUE, pc.biplot = TRUE)
