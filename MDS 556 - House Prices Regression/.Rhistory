data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales="free") +
geom_histogram()
data <- read.csv(file='train.csv', header=TRUE)
rm(list = ls())
## data preprocessing
source("data preprocessing.R", local = TRUE)
setwd('C:/Users/cusey/source/repos/DataScienceProjects/MDS 556 - House Prices Regression')
options(scipen = 999)
data <- read.csv(file='train.csv', header=TRUE)
is.na(data$MSSubClass)
sapply(data_raw,function(x) sum(is.na(x)))
sapply(data,function(x) sum(is.na(x)))
## 2 - FEATURE: MSSUBCLASS
data$MSSubClass = factor(data$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
sapply(data,function(x) sum(is.na(x)))
data$MSZoning = factor(data$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
sapply(data,function(x) sum(is.na(x)))
data$LotFrontage[is.na(all$LotFrontage)] <- 0
data$LotFrontage[is.na(data$LotFrontage)] <- 0
sapply(data,function(x) sum(is.na(x)))
data_raw <- data
## 1 - FEATURE: ID = REMOVE
drop <- c("Id")
## 2 - FEATURE: MSSUBCLASS
data_raw$MSSubClass = factor(data_raw$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
data_raw$MSZoning = factor(data_raw$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
## 4 - FEATURE: LotFrontage, for now replace with 0, no street connected to property
data_raw$LotFrontage[is.na(data_raw$LotFrontage)] <- 0
## 5 - FEATURE: LotArea, for now replace missing values w/ mean if any
## since LotArea could not be 0. There are no instances of this in the data
## but in case they were, we'd catch it here.
data_raw$LotArea = ifelse(is.na(data_raw$LotArea),
ave(data_raw$LotArea, FUN = function(x) mean(x,na.rm=TRUE)),
data_raw$LotArea)
## 6 - FEATURE: STREET, turn to factor
data$Street = factor(data$Street,
levels = c(  'Grvl'
,'Pave'
),
labels = c("Gravel","Paved"))
## 7 - FEATURE: Alley - Lets change this just to indicate if there is an alley or not
data$Alley = +(!is.na(data$Alley))
## 8 - FEATURE: LotShape, turn to factor
data$LotShape = factor(data$LotShape,
levels = c(    'Reg'
,'IR1'
,'IR2'
,'IR3'
),
labels = c( "Regular"
,"Slightly Irregular"
,"Moderately Irregular"
,"Irregular"))
data_raw
data_raw(data,function(x) sum(is.na(x)))
data_raw(data_raw,function(x) sum(is.na(x)))
sapply(data_raw,function(x) sum(is.na(x)))
rm(list = ls())
data <- read.csv(file='train.csv', header=TRUE)
data_raw <- data
## 1 - FEATURE: ID = REMOVE
drop <- c("Id")
## 2 - FEATURE: MSSUBCLASS
data_raw$MSSubClass = factor(data_raw$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
data_raw$MSZoning = factor(data_raw$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
## 4 - FEATURE: LotFrontage, for now replace with 0, no street connected to property
data_raw$LotFrontage[is.na(data_raw$LotFrontage)] <- 0
## 5 - FEATURE: LotArea, for now replace missing values w/ mean if any
## since LotArea could not be 0. There are no instances of this in the data
## but in case they were, we'd catch it here.
data_raw$LotArea = ifelse(is.na(data_raw$LotArea),
ave(data_raw$LotArea, FUN = function(x) mean(x,na.rm=TRUE)),
data_raw$LotArea)
## 6 - FEATURE: STREET, turn to factor
data_raw$Street = factor(data_raw$Street,
levels = c(  'Grvl'
,'Pave'
),
labels = c("Gravel","Paved"))
## 7 - FEATURE: Alley - Lets change this just to indicate if there is an alley or not
data_raw$Alley = +(!is.na(data_raw$Alley))
## 8 - FEATURE: LotShape, turn to factor
data_raw$LotShape = factor(data_raw$LotShape,
levels = c(    'Reg'
,'IR1'
,'IR2'
,'IR3'
),
labels = c( "Regular"
,"Slightly Irregular"
,"Moderately Irregular"
,"Irregular"))
## 9 - FEATURE: LandContour, turn to factor
data_raw$LandContour = factor(data_raw$LandContour,
levels = c(    'Lvl'
,'Bnk'
,'HLS'
,'Low'
),
labels = c( "Near Flat/Level"
,"Banked"
,"Hillside"
,"Low"))
sapply(data_raw,function(x) sum(is.na(x)))
## 10 - FEATURE: Utilities, turn to factor
data_raw$Utilities = factor(data_raw$Utilities,
levels = c('AllPub',
'NoSewr',
'NoSeWa',
'ELO'
),
labels = c( "All Public Utilities"
,"Electricity, Gas, and Water"
,"Electricity and Gas Only"
,"Electricity Only"))
## FEATURE 19 OverallCond = Rates the overall condition of the house
## Order matters here - Ordinal data... add ordered = true param
data_raw$OverallCond = factor(data_raw$OverallCond, ordered = TRUE,
levels = c('10',
'9',
'8',
'7',
'6',
'5',
'4',
'3',
'2',
'1'
),
labels = c(   "Very Excellent",
"Excellent",
"Very Good"
,"Good"
,"Above Average"
,"Average"
,"Below Average"
,"Fair"
,"Poor"
,"Very Poor")
)
data_raw <- data
## 1 - FEATURE: ID = REMOVE
drop <- c("Id")
## 2 - FEATURE: MSSUBCLASS
data_raw$MSSubClass = factor(data_raw$MSSubClass,
levels = c('20','30','40','45','50','60','70','75','80','85','90','120','150','160','180','190'),
labels = c('1-STORY 1946 & NEWER ALL STYLES',
'1-STORY 1945 & OLDER',
'1-STORY W/FINISHED ATTIC ALL AGES',
'1-1/2 STORY - UNFINISHED ALL AGES',
'1-1/2 STORY FINISHED ALL AGES',
'2-STORY 1946 & NEWER',
'2-STORY 1945 & OLDER',
'2-1/2 STORY ALL AGES',
'SPLIT OR MULTI-LEVEL',
'SPLIT FOYER',
'DUPLEX - ALL STYLES AND AGES',
'1-STORY PUD (Planned Unit Development) - 1946 & NEWER',
'1-1/2 STORY PUD - ALL AGES',
'2-STORY PUD - 1946 & NEWER',
'UD - MULTILEVEL - INCL SPLIT LEV/FOYER',
'2 FAMILY CONVERSION - ALL STYLES AND AGES'))
data_raw$MSZoning = factor(data_raw$MSZoning,
levels = c(  'A'
,'C (all)'
,'FV'
,'I'
,'RH'
,'RL'
,'RP'
,'RM'
),
labels = c( 'Agriculutre'
,'Commercial'
,'Floating Village Residential'
,'Industrial'
,'Residential High Density'
,'Residential Low Density'
,'Residential Low Density Park'
,'Residential Medium Density'))
## 4 - FEATURE: LotFrontage, for now replace with 0, no street connected to property
data_raw$LotFrontage[is.na(data_raw$LotFrontage)] <- 0
## 5 - FEATURE: LotArea, for now replace missing values w/ mean if any
## since LotArea could not be 0. There are no instances of this in the data
## but in case they were, we'd catch it here.
data_raw$LotArea = ifelse(is.na(data_raw$LotArea),
ave(data_raw$LotArea, FUN = function(x) mean(x,na.rm=TRUE)),
data_raw$LotArea)
## 6 - FEATURE: STREET, turn to factor
data_raw$Street = factor(data_raw$Street,
levels = c(  'Grvl'
,'Pave'
),
labels = c("Gravel","Paved"))
## 7 - FEATURE: Alley - Lets change this just to indicate if there is an alley or not
data_raw$Alley = +(!is.na(data_raw$Alley))
## 8 - FEATURE: LotShape, turn to factor
data_raw$LotShape = factor(data_raw$LotShape,
levels = c(    'Reg'
,'IR1'
,'IR2'
,'IR3'
),
labels = c( "Regular"
,"Slightly Irregular"
,"Moderately Irregular"
,"Irregular"))
## 9 - FEATURE: LandContour, turn to factor
data_raw$LandContour = factor(data_raw$LandContour,
levels = c(    'Lvl'
,'Bnk'
,'HLS'
,'Low'
),
labels = c( "Near Flat/Level"
,"Banked"
,"Hillside"
,"Low"))
sapply(data_raw,function(x) sum(is.na(x)))
## 10 - FEATURE: Utilities, turn to factor
data_raw$Utilities = factor(data_raw$Utilities,
levels = c('AllPub',
'NoSewr',
'NoSeWa',
'ELO'
),
labels = c( "All Public Utilities"
,"Electricity, Gas, and Water"
,"Electricity and Gas Only"
,"Electricity Only"))
## 11 - FEATURE: LotConfig, turn to factor
data_raw$LotConfig = factor(data_raw$LotConfig,
levels = c('Inside',
'Corner',
'CulDSac',
'FR2',
'FR3'
),
labels = c( "Inside Lot"
,"Corner Log"
,"Cul-de-sac"
,"Frontage on 2 sides of property"
,"Frontage on 3 sides of property"))
## 12 - FEATURE: LandSlope, turn to factor
data_raw$LandSlope = factor(data_raw$LandSlope,
levels = c('Gtl',
'Mod',
'Sev'
),
labels = c( "Gentle Slope"
,"Moderate Slope"
,"Sever Slope")
)
## 13 - FEATURE: Neighborhood, turn to factor
data_raw$Neighborhood = factor(data_raw$Neighborhood,
levels = c('Blmngtn',
'Blueste',
'BrDale',
'BrkSide',
'ClearCr',
'CollgCr',
'Crawfor',
'Edwards',
'Gilbert',
'IDOTRR',
'MeadowV',
'Mitchel',
'Names',
'NoRidge',
'NPkVill',
'NridgHt',
'NWAmes',
'OldTown',
'SWISU',
'Sawyer',
'SawyerW',
'Somerst',
'StoneBr',
'Timber',
'Veenker',
'Other'
),
labels = c( "Bloomington Heights"
,"Bluestem"
,"Briardale"
,"Brookside"
,"Clear Creek"
,"College Creek"
,"Crawford"
,"Edwards"
,"Gilbert"
,"Iowa DOT and Rail Road"
,"Meadow Village"
,"Mitchell"
,"North Ames"
,"Northridge"
,"Northpark Villa"
,"Northridge Heights"
,"Northwest Ames"
,"Old Town"
,"South & West of Iowa State University"
,"Sawyer"
,"Sawyer West"
,"Somerset"
,"Stone Brook"
,"Timberland"
,"Veenker"
,"Other")
)
sapply(data_raw,function(x) sum(is.na(x)))
data_raw$Neighborhood[is.na(data_raw$Neighborhood)] <- "Other"
sapply(data_raw,function(x) sum(is.na(x)))
#14 & #15 Condition1 and Condition2
## Artial Street = Highway
## Feeder Street = Important Road that feeds into high traffic area
## Combine Condition1 and Condition2
## binary = ByHWY
##          ByFeeder
##          ByRR
##          ByPositiveFeature
## Normal I Think would be a duplicate dummy variable.
RR_List = c("RRNn","RRAn","RRNe", "RRAe")
data_raw$ByRR <- +(data_raw$Condition1 %in% RR_List | data_raw$Condition2 %in% RR_List)
rm("RR_List")
data_raw$ByHWY = +(data_raw$Condition1 == "Artery" | data_raw$Condition2 == "Artery")
data_raw$ByFeeder = +(data_raw$Condition1 == "Feedr" | data_raw$Condition2 == "Feedr")
data_raw$ByPositiveFeature = +(data_raw$Condition1 == "PosN" | data_raw$Condition2 == "PosN")
drop <- c(drop,"Condition1","Condition2")
## FEATURE 16 BldgType = Type of Dwelling
## Maybe combine townhouse factor
data_raw$BldgType = factor(data_raw$BldgType,
levels = c('1Fam',
'2FmCon',
'Duplx',
'Twnhse',
'TwnhsI'
),
labels = c(  "Single-Family Detached"
,"Two-Family Conversion"
,"Duplex"
,"Townhouse End Unit"
,"Townhouse Inside Unit")
)
sapply(data_raw,function(x) sum(is.na(x)))
ggplot(data[!is.na(data$SalePrice),], aes(x=as.factor(BldgType), y=SalePrice)) +
geom_bar(stat='summary', fun.y = "median", fill='blue')+
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_label(stat = "count", aes(label = ..count.., y = ..count..))
ggplot(data[!is.na(data$SalePrice),], aes(x=as.factor(BldgType), y=SalePrice)) +
geom_bar(stat='summary', fun.y = "median", fill='blue')+
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_label(stat = "count", aes(label = ..count.., y = ..count..))
library(ggplot2)
ggplot(data[!is.na(data$SalePrice),], aes(x=as.factor(BldgType), y=SalePrice)) +
geom_bar(stat='summary', fun.y = "median", fill='blue')+
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_label(stat = "count", aes(label = ..count.., y = ..count..))
library(knitr)
install.packages("knitr")
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
install.packages("corrplot")
library(corrplot)
##install.packages("corrplot")
library(corrplot)
install.packages(c("psych", "Rmisc", "xgboost"))
library(caret)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
ggplot(data[!is.na(data$SalePrice),], aes(x=as.factor(BldgType), y=SalePrice)) +
geom_bar(stat='summary', fun.y = "median", fill='blue')+
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_label(stat = "count", aes(label = ..count.., y = ..count..))
data <- read.csv(file='train.csv', header=TRUE, stringsAsFactors = FALSE)
data_raw <- data
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales="free") +
geom_histogram()
## TARGET VARIABLE
summary(data$SalePrice)
plot(data$SalePrice)
ggplot(data=data[!is.na(data$SalePrice),], aes(x=SalePrice)) +
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=data[!is.na(data$SalePrice),], aes(x=SalePrice)) +
geom_histogram(binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=data[!is.na(data$SalePrice),], aes(x=SalePrice)) +
geom_histogram(binwidth = 10000)
library(ggplot2)
ggplot(data=data[!is.na(data$SalePrice),], aes(x=SalePrice)) +
geom_histogram(binwidth = 10000)
dev.off()
ggplot(data=data[!is.na(data$SalePrice),], aes(x=SalePrice)) +
geom_histogram(binwidth = 10000)
